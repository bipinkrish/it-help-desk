name: Deploy LiveKit Agent

on:
  push:
    branches: [ main ]
    paths:
      - 'agent/**'
      - '.github/workflows/deploy-agent.yaml'

jobs:
  deploy:
    runs-on: ubuntu-latest
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      
    - name: Set up Python
      uses: actions/setup-python@v4
      with:
        python-version: '3.11'
        
    - name: Download and Install LiveKit CLI
      run: |
        curl -sSL https://get.livekit.io/cli | bash
        
    - name: Configure LiveKit CLI
      env:
        LIVEKIT_API_KEY: ${{ secrets.LIVEKIT_API_KEY }}
        LIVEKIT_API_SECRET: ${{ secrets.LIVEKIT_API_SECRET }}
        LIVEKIT_URL: ${{ secrets.LIVEKIT_URL }}
      run: |
        lk project add it-help-desk --url "$LIVEKIT_URL" --api-key "$LIVEKIT_API_KEY" --api-secret "$LIVEKIT_API_SECRET"
        
    - name: Create secrets file
      run: |
        cd agent
        cat > secrets.env << EOF
        # LiveKit Cloud Configuration
        LIVEKIT_URL=${{ secrets.LIVEKIT_URL }}
        LIVEKIT_API_KEY=${{ secrets.LIVEKIT_API_KEY }}
        LIVEKIT_API_SECRET=${{ secrets.LIVEKIT_API_SECRET }}
        
        # AI Provider Configuration
        DEEPGRAM_API_KEY=${{ secrets.DEEPGRAM_API_KEY }}
        GROQ_API_KEY=${{ secrets.GROQ_API_KEY }}
        CARTESIA_API_KEY=${{ secrets.CARTESIA_API_KEY }}
        
        # Database
        DATABASE_URL=sqlite:///./tickets.db
        EOF
        
    - name: Create agent if it doesn't exist
      run: |
        cd agent
        lk agent create --secrets-file secrets.env || echo "Agent already exists or creation failed"
        
    - name: Deploy agent
      run: |
        cd agent
        lk agent deploy --secrets-file secrets.env
        
    - name: Clean up secrets
      run: |
        cd agent
        rm -f secrets.env
